// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package datadog.trace.instrumentation.rmi.context;

public final class ContextServer_Stub extends java.rmi.server.RemoteStub
    implements ContextTransport, java.rmi.Remote {
  private static final long serialVersionUID = 2;

  private static final java.lang.reflect.Method $method_post_0;

  static {
    try {
      $method_post_0 = ContextTransport.class.getMethod("post", new Class[] {ContextPayload.class});
    } catch (final NoSuchMethodException e) {
      throw new NoSuchMethodError("stub class initialization failed");
    }
  }

  // constructors
  public ContextServer_Stub(final java.rmi.server.RemoteRef ref) {
    super(ref);
  }

  // methods from remote interfaces

  // implementation of post(ContextPayload)
  @Override
  public void post(final ContextPayload $param_ContextPayload_1) throws java.rmi.RemoteException {
    try {
      ref.invoke(this, $method_post_0, new Object[] {$param_ContextPayload_1}, 746042503109223547L);
    } catch (final RuntimeException e) {
      throw e;
    } catch (final java.rmi.RemoteException e) {
      throw e;
    } catch (final Exception e) {
      throw new java.rmi.UnexpectedException("undeclared checked exception", e);
    }
  }
}
